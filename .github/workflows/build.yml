name: Build S2MP-Mod

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      
    - name: Create lib directory
      run: |
        mkdir -p lib/Release
        mkdir -p S2MP-Mod/lib
      shell: bash
        
    - name: Download and Setup MinHook
      run: |
        # Clone MinHook repo if it doesn't exist
        if [ ! -d "minhook" ]; then
          git clone https://github.com/TsudaKageyu/minhook.git
        else
          echo "MinHook repository already exists, skipping clone"
        fi
        
        cd minhook
        # Remove existing build directory if it exists and create a new one
        if [ -d "build" ]; then
          rm -rf build
        fi
        mkdir build
        cd build
        
        cmake -G "Visual Studio 17 2022" -A x64 -DBUILD_SHARED_LIBS=OFF ..
        cmake --build . --config Release
        
        # Create the destination directories and copy to multiple locations
        mkdir -p ../../../lib/Release
        mkdir -p ../../../S2MP-Mod/lib
        mkdir -p ../../../x64/Release
        
        # Show contents for debugging
        echo "Contents of ./Release directory:"
        ls -la ./Release
        
        # Copy the library with various names to various locations
        cp ./Release/MinHook.x64.lib ../../../lib/Release/libMinHook.x64.lib
        cp ./Release/MinHook.x64.lib ../../../lib/Release/MinHook.x64.lib
        cp ./Release/MinHook.x64.lib ../../../libMinHook.x64.lib
        cp ./Release/MinHook.x64.lib ../../../MinHook.x64.lib
        cp ./Release/MinHook.x64.lib ../../../S2MP-Mod/lib/libMinHook.x64.lib
        cp ./Release/MinHook.x64.lib ../../../S2MP-Mod/lib/MinHook.x64.lib
        cp ./Release/MinHook.x64.lib ../../../x64/Release/libMinHook.x64.lib
        cp ./Release/MinHook.x64.lib ../../../x64/Release/MinHook.x64.lib
        
        # Debug - show the copied files
        echo "Contents of lib/Release directory after copy:"
        ls -la ../../../lib/Release
        echo "Contents of S2MP-Mod/lib directory after copy:"
        ls -la ../../../S2MP-Mod/lib
        echo "Contents of x64/Release directory after copy:"
        ls -la ../../../x64/Release
        echo "Contents of root directory:"
        ls -la ../../../
        
        cd ../../
        # Ensure includes directory exists
        mkdir -p include
        cp -r minhook/include/* include/
      shell: bash
      
    - name: Modify project file to use static library reference
      run: |
        # Create vcxproj.user file with custom library paths that APPEND rather than override
        echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
        <Project ToolsVersion=\"Current\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">
          <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">
            <LibraryPath>$(SolutionDir)lib\Release;$(SolutionDir)S2MP-Mod\lib;$(LibraryPath)</LibraryPath>
            <IncludePath>$(SolutionDir)include;$(IncludePath)</IncludePath>
          </PropertyGroup>
        </Project>" > S2MP-Mod/S2MP-Mod.vcxproj.user
      shell: bash
      
    - name: Modify project to include library directly
      run: |
        echo "Attempting to add direct reference to the library file"
        powershell -Command "(Get-Content S2MP-Mod/S2MP-Mod.vcxproj) -replace '<AdditionalDependencies>', '<AdditionalDependencies>MinHook.x64.lib;libMinHook.x64.lib;' | Set-Content S2MP-Mod/S2MP-Mod.vcxproj"
      shell: cmd
      
    - name: Update Project Library Settings
      run: |
        REM Display current directory structure for debugging
        dir /s /b lib
        echo ---------------------
        dir /s /b S2MP-Mod\lib
      shell: cmd
      
    - name: Find and setup Windows SDK paths
      run: |
        echo "Setting up environment variables for Windows SDK"
        for /f "usebackq tokens=*" %%i in (`"%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath`) do (
          set InstallDir=%%i
        )
        call "!InstallDir!\VC\Auxiliary\Build\vcvarsall.bat" x64
      shell: cmd
      
    - name: Build solution
      run: |
        REM Basic build without overriding lib paths
        msbuild /m /p:Configuration=Release /p:Platform=x64 S2MP-Mod.sln
      shell: cmd
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: S2MP-Mod-Release
        path: |
          x64/Release/S2MP-Mod.dll
          x64/Release/S2MP-Mod.pdb